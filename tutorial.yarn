{
	"header": {
		"lastSavedUnix": "2025-02-20T08:25:47.554Z",
		"language": "en-GB",
		"documentType": "yarn",
		"markupLanguage": "bbcode",
		"filetypeVersion": "2",
		"pluginStorage": {
			"Runner": {}
		}
	},
	"nodes": [
		{
			"title": "Start",
			"tags": "",
			"body": "旁白: 这里开始第二章内容。\n\nYarn教学: Yarn Spinner 是一种用于编写游戏对话的语言！\nYarn教学: 你可以用它来编写分支对话，并在游戏引擎中使用！\n\nYarn教学: 例如，这里有一些选项供你选择！\n\n-> 我: 哇，有选项可以选！\n\tYarn教学: 选的好，朋友！\n-> 我: 我可以在选项中放入文本吗？\n\tYarn教学: 当然可以！\n\tYarn教学: 例如，这里有一些选项中的行。\n\tYarn教学: 你甚至可以在选项中嵌套其他选项！\n\t-> Yarn教学: 像这样！\n\t\t我: 哇！\n\t-> Yarn教学: 或者这样！\n\t\t我: 不可思议！\n\n// 注释以两个斜杠开头，不会在对话中显示。\n// 它们适合用来做一些备注！\n\nYarn教学: 你还可以编写“命令”，它们代表游戏中发生的事情！\n\nYarn教学: 在这个编辑器中，它们会以文本形式出现：\n\n<<fade_up 1.0>>\n\n-> 我: 不错！\n\tYarn教学: 是吧？？\n-> 我: 但它实际上没有淡出！\n\tYarn教学: 那是因为这个页面不了解“淡出”或任何其他功能。\n\tYarn教学: 当你在这个页面上测试脚本还没有做支持的命令时，我们只会以文本形式输出在你的控制台中。\n\tYarn教学: 在真实的游戏中，你可以定义执行有用工作的自定义命令！\n\nYarn教学: 你还可以使用变量来存储信息！\n\nYarn教学: 让我们设置一个名为“$name”的变量。\n\n<<set $name to \"Yarn\">>\n\nYarn教学: 完成！“$name”已经存储到了内存里。\n\nYarn教学: 我们可以在行中使用“$name”：我的名字是{$name}！\n\n-> 我: 我可以在变量中存储什么？\n\tYarn教学: 你可以存储文本、数字和真/假值！\n-> 我: 变量存储在哪里？\n\tYarn教学: 在这个页面中，我们将它们存储在内存中。当你在像 Dora SSR  这样的游戏引擎中使用 Yarn Spinner 时，你可以将它们存储在内存中，或者编写自定义代码，将它们与游戏的其他保存数据一起存储在磁盘上！\n\nYarn教学: 我们还可以使用“if”语句来改变发生的事情！\n\nYarn教学: 让我们将一个名为“$gold”的变量设置为 5。\n\n<<set $gold to 5>>\n\nYarn教学: 接下来，让我们根据“$gold”中的值运行不同的行：\n\n<<if $gold > 5>>\n\tYarn教学: “$gold”变量大于 5！\n<<else>>\n\tYarn教学: “$gold”变量小于或等于 5！\n<<endif>>\n\nYarn教学: 最后，我们可以使用“jump”命令跳转到另一个节点！现在就来试试吧！\n\n<<jump OtherNode>>",
			"position": {
				"x": -120,
				"y": -120
			},
			"colorID": 0
		},
		{
			"title": "OtherNode",
			"tags": "",
			"body": "Yarn教学: 我们现在在另一个节点！节点可以让你将内容分成不同的块，这样更容易管理。\n\nYarn教学: 我们完成了！试着更改编辑器中的文本，然后再次点击测试！",
			"position": {
				"x": -120,
				"y": 160
			},
			"colorID": 0
		}
	]
}